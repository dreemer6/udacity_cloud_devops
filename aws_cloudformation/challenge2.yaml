AWSTemplateFormatVersion: 2010-09-09
Description: Creates the required network infrastructure for challenge2
Parameters: 
  EnvironmentName:
    Description: An environment name that will be prefixed to resources
    Type: String
  VpcCIDR:
    Description: The IP range (CIDR notation) for this VPC 
    Type: String
    Default: 10.0.0.0/16
  PublicSubnetCIDR:
    Description: The IP range (CIDR notation) for this Public Subnet
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnetCIDR:
    Description: The IP range (CIDR notation) for this Private Subnet
    Type: String
    Default: 10.0.2.0/24
Resources: 
  MainVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Main VPC
  InternetGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Internet Gateway
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGW
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      VpcId: !Ref MainVPC
      CidrBlock: !Ref PublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      VpcId: !Ref MainVPC
      CidrBlock: !Ref PrivateSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
  NAT:
    Type: AWS::EC2::NatGateway
    DependsOn: EIP
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} EIP
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Priv RT
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MainVPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Pub RT
  AssociatePUBRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable
  AssociatePRIVRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable
  PublicInternetRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGW
  PrivateInternetOutboundRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NAT
Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref MainVPC
    Export: 
      Name: !Sub ${EnvironmentName}-VPCID
  PublicSubnet1:
    Description: A reference to the created PublicSubnet
    Value: !Ref PublicSubnet1
    Export: 
      Name: !Sub ${EnvironmentName}-PubSubnet1
  PrivateSubnet1:
    Description: A reference to the created PrivateSubnet
    Value: !Ref PrivateSubnet1
    Export: 
      Name: !Sub ${EnvironmentName}-PrivSubnet1
  